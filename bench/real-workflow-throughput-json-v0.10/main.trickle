define script runtime
script
  match event of
    case %{application == "app1"} => let $class = "applog_app1",  let $rate = 1250, let $dimension = event.application
    case %{application == "app2"} => let $class = "applog_app1",  let $rate = 2500, let $dimension = event.application
    case %{application == "app3"} => let $class = "applog_app1",  let $rate = 18750, let $dimension = event.application
    case %{application == "app4"} => let $class = "applog_app1",  let $rate = 750, let $dimension = event.application
    case %{application == "app5"} => let $class = "applog_app1",  let $rate = 18750, let $dimension = event.application
    case %{index_type == "applog_app6"} => let $class = "applog_app6", let $rate = 4500, let $dimensions = event.logger_name
    case %{index_type == "syslog_app1"} => let $class = "syslog_app1", let $rate = 2500, let $dimensions = event.syslog_hostname
    case %{tags ~= %["tag1"]} => let $class = "syslog_app2", let $rate = 125, let $dimensions = event.syslog_hostname
    case %{index_type == "syslog_app3"} => let $class = "syslog_app3", let $rate = 1750, let $dimensions = event.syslog_hostname
    case %{index_type == "syslog_app4"} => let $class = "syslog_app4", let $rate = 7500, let $dimensions = event.syslog_hostname
    case %{index_type == "syslog_app5"} => let $class = "syslog_app5", let $rate = 125, let $dimensions = event.syslog_hostname
    case %{index_type == "syslog_app6"} => let $class = "syslog_app6", let $rate = 3750, let $dimensions = event.syslog_hostname
    case _ => let $class = "default", let $rate = 250
  end;
  event
end;

define grouper::bucket operator grouper;

create script runtime;
create operator grouper;

select event from in into runtime;
select event from runtime into grouper;
select event from grouper into out;
select event from grouper/overflow into out;
