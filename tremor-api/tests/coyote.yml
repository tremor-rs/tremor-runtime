- name: coyote
  title: tremor-api-tests

- name: REST API - Initial state after empty deployment
  entries:
    - name: GET /version
      command: curl -vs --stderr - http://localhost:9898/version
      stdout_has:
        - HTTP/1.1 200 OK
        - '{"version":"0.8.0"}'
    - name: GET /onramp
      command: curl -vs --stderr - http://localhost:9898/onramp
      stdout_has:
        - HTTP/1.1 200 OK
        - '\[]'
    - name: GET /offramp
      command: curl -vs --stderr - http://localhost:9898/offramp
      stdout_has:
        - HTTP/1.1 200 OK
        - "system::stdout"
        - "system::stderr"
    - name: GET /pipeline
      command: curl -vs --stderr - http://localhost:9898/pipeline
      stdout_has:
        - HTTP/1.1 200 OK
        - "system::metrics"
    - name: GET /binding
      command: curl -vs --stderr - http://localhost:9898/binding
      stdout_has:
        - HTTP/1.1 200 OK
        - '\[]'
- name: REST API - Interactive deploy/undeploy of a pipeline ( YAML )
  entries:
    - name: GET /pipeline/main should 404 before publish
      command: curl -vs --stderr - http://localhost:9898/pipeline/main
      stdout_has:
        - HTTP/1.1 404 Not Found
    - name: GET /pipeline should return an empty list
      command: curl -vs --stderr - http://localhost:9898/pipeline
      stdout_has:
        - HTTP/1.1 200 OK
        - "system::metrics"
    - name: Publish pipeline ( JSON )
      command: >
        curl -vs -stderr -X POST --data-binary @tests/bench-pipeline.yaml -H "Content-type: application/yaml" http://localhost:9898/pipeline
      stderr_has:
        - HTTP/1.1 201 Created
        - "content-type: application/json"
    - name: Publish pipeline already exists ( JSON )
      command: >
        curl -vs -stderr -X POST --data-binary @tests/bench-pipeline.json -H "Content-type: application/json" http://localhost:9898/pipeline
      stderr_has:
        - HTTP/1.1 409 Conflict
    - name: Get /pipeline should return a list of 2 elements
      command: curl -vs --stderr - http://localhost:9898/pipeline
      stdout_has:
        - HTTP/1.1 200 OK
        - "system::metrics"
        - "main"
    - name: GET /pipeline/main should 200 after publish
      command: curl -vs --stderr - http://localhost:9898/pipeline/main
      stdout_has:
        - HTTP/1.1 200 OK
    - name: DELETE /pipeline/main should
      command: curl -vs --stderr - -X DELETE http://localhost:9898/pipeline/main
      stdout_has:
        - HTTP/1.1 200 OK
    - name: Get /pipeline should return an empty list
      command: curl -vs --stderr - http://localhost:9898/pipeline
      stdout_has:
        - HTTP/1.1 200 OK
        - "system::metrics"
- name: REST API - Interactive deploy/undeploy of a pipeline ( JSON )
  entries:
    - name: GET /pipeline/main should 404 before publish
      command: curl -vs --stderr - http://localhost:9898/pipeline/main
      stdout_has:
        - HTTP/1.1 404 Not Found
    - name: GET /pipeline should return an empty list
      command: curl -vs --stderr - http://localhost:9898/pipeline
      stdout_has:
        - HTTP/1.1 200 OK
        - "system::metrics"
    - name: Publish pipeline ( JSON )
      command: >
        curl -vs -stderr -X POST --data-binary @tests/bench-pipeline.json -H "Content-type: application/json" -H "Accept: application/yaml" http://localhost:9898/pipeline
      stderr_has:
        - HTTP/1.1 201 Created
        - "content-type: application/yaml"
    - name: Publish pipeline already exists ( YAML )
      command: >
        curl -vs -stderr -X POST --data-binary @tests/bench-pipeline.yaml -H "Content-type: application/yaml" http://localhost:9898/pipeline
      stderr_has:
        - HTTP/1.1 409 Conflict
    - name: Get /pipeline should return a list of 2 elements
      command: >
        curl -vs --stderr - -H "Accept: application/yaml" http://localhost:9898/pipeline
      stdout_has:
        - HTTP/1.1 200 OK
        - "- main"
        - '- "system::metrics"'
    - name: GET /pipeline/main should 200 after publish
      command: >
        curl -vs --stderr - -H "Accept: application/yaml" http://localhost:9898/pipeline/main
      stdout_has:
        - HTTP/1.1 200 OK
    - name: DELETE /pipeline/main should
      command: >
        curl -vs --stderr - -X DELETE  -H "Accept: application/yaml" http://localhost:9898/pipeline/main
      stdout_has:
        - HTTP/1.1 200 OK
    - name: Get /pipeline should return an empty list
      command: curl -vs --stderr - http://localhost:9898/pipeline
      stdout_has:
        - HTTP/1.1 200 OK
        - "system::metrics"
- name: REST API - Interactive deploy/undeploy of an onramp ( YAML )
  entries:
    - name: GET /onramp/blaster should 404 before publish
      command: curl -vs --stderr - http://localhost:9898/onramp/blaster
      stdout_has:
        - HTTP/1.1 404 Not Found
    - name: GET /onramp should return an empty list
      command: curl -vs --stderr - http://localhost:9898/onramp
      stdout_has:
        - HTTP/1.1 200 OK
        - '\[]'
    - name: Publish onramp ( JSON )
      command: >
        curl -vs -stderr -X POST --data-binary @tests/bench-onramp.yaml -H "Content-type: application/yaml" http://localhost:9898/onramp
      stderr_has:
        - HTTP/1.1 201 Created
        - "content-type: application/json"
    - name: Publish onramp already exists ( JSON )
      command: >
        curl -vs -stderr -X POST --data-binary @tests/bench-onramp.json -H "Content-type: application/json" http://localhost:9898/onramp
      stderr_has:
        - HTTP/1.1 409 Conflict
    - name: Get /onramp should return a list of 2 element
      command: curl -vs --stderr - http://localhost:9898/onramp
      stdout_has:
        - HTTP/1.1 200 OK
        - "blaster"
    - name: GET /onramp/blaster should 200 after publish
      command: curl -vs --stderr - http://localhost:9898/onramp/blaster
      stdout_has:
        - HTTP/1.1 200 OK
    - name: DELETE /onramp/blaster should
      command: curl -vs --stderr - -X DELETE http://localhost:9898/onramp/blaster
      stdout_has:
        - HTTP/1.1 200 OK
    - name: Get /onramp should return an empty list
      command: curl -vs --stderr - http://localhost:9898/onramp
      stdout_has:
        - HTTP/1.1 200 OK
        - '\[]'
- name: REST API - Interactive deploy/undeploy of a onramp ( JSON )
  entries:
    - name: GET /onramp/blaster should 404 before publish
      command: curl -vs --stderr - http://localhost:9898/onramp/blaster
      stdout_has:
        - HTTP/1.1 404 Not Found
    - name: GET /onramp should return an empty list
      command: curl -vs --stderr - http://localhost:9898/onramp
      stdout_has:
        - HTTP/1.1 200 OK
        - '\[]'
    - name: Publish onramp ( JSON )
      command: >
        curl -vs -stderr -X POST --data-binary @tests/bench-onramp.json -H "Content-type: application/json" -H "Accept: application/yaml" http://localhost:9898/onramp
      stderr_has:
        - HTTP/1.1 201 Created
        - "content-type: application/yaml"
    - name: Publish onramp already exists ( YAML )
      command: >
        curl -vs -stderr -X POST --data-binary @tests/bench-onramp.yaml -H "Content-type: application/yaml" http://localhost:9898/onramp
      stderr_has:
        - HTTP/1.1 409 Conflict
    - name: Get /onramp should return a list of 1 element
      command: >
        curl -vs --stderr - -H "Accept: application/yaml" http://localhost:9898/onramp
      stdout_has:
        - HTTP/1.1 200 OK
        - "- blaster"
    - name: GET /onramp/blaster should 200 after publish
      command: >
        curl -vs --stderr - -H "Accept: application/yaml" http://localhost:9898/onramp/blaster
      stdout_has:
        - HTTP/1.1 200 OK
    - name: DELETE /onramp/blaster should
      command: >
        curl -vs --stderr - -X DELETE  -H "Accept: application/yaml" http://localhost:9898/onramp/blaster
      stdout_has:
        - HTTP/1.1 200 OK
    - name: Get /onramp should return an empty list
      command: curl -vs --stderr - http://localhost:9898/onramp
      stdout_has:
        - HTTP/1.1 200 OK
        - '\[]'
- name: REST API - Interactive deploy/undeploy of an offramp ( YAML )
  entries:
    - name: GET /offramp/blackhole should 404 before publish
      command: curl -vs --stderr - http://localhost:9898/offramp/blackhole
      stdout_has:
        - HTTP/1.1 404 Not Found
    - name: GET /offramp should return an empty list
      command: curl -vs --stderr - http://localhost:9898/offramp
      stdout_has:
        - HTTP/1.1 200 OK
        - "system::stdout"
        - "system::stderr"
    - name: Publish offramp ( JSON )
      command: >
        curl -vs -stderr -X POST --data-binary @tests/bench-offramp.yaml -H "Content-type: application/yaml" http://localhost:9898/offramp
      stderr_has:
        - HTTP/1.1 201 Created
        - "content-type: application/json"
    - name: Publish offramp already exists ( JSON )
      command: >
        curl -vs -stderr -X POST --data-binary @tests/bench-offramp.json -H "Content-type: application/json" http://localhost:9898/offramp
      stderr_has:
        - HTTP/1.1 409 Conflict
    - name: Get /offramp should return a list of 2 elements
      command: curl -vs --stderr - http://localhost:9898/offramp
      stdout_has:
        - HTTP/1.1 200 OK
        - "system::stdout"
        - "blackhole"
        - "system::stderr"
    - name: GET /offramp/blackhole should 200 after publish
      command: curl -vs --stderr - http://localhost:9898/offramp/blackhole
      stdout_has:
        - HTTP/1.1 200 OK
    - name: DELETE /offramp/blackhole should
      command: curl -vs --stderr - -X DELETE http://localhost:9898/offramp/blackhole
      stdout_has:
        - HTTP/1.1 200 OK
    - name: Get /offramp should return an empty list
      command: curl -vs --stderr - http://localhost:9898/offramp
      stdout_has:
        - HTTP/1.1 200 OK
        - "system::stdout"
        - "system::stderr"
- name: REST API - Interactive deploy/undeploy of a offramp ( JSON )
  entries:
    - name: GET /offramp/blackhole should 404 before publish
      command: curl -vs --stderr - http://localhost:9898/offramp/blackhole
      stdout_has:
        - HTTP/1.1 404 Not Found
    - name: GET /offramp should return an empty list
      command: curl -vs --stderr - http://localhost:9898/offramp
      stdout_has:
        - HTTP/1.1 200 OK
        - "system::stdout"
        - "system::stderr"
    - name: Publish offramp ( JSON )
      command: >
        curl -vs -stderr -X POST --data-binary @tests/bench-offramp.json -H "Content-type: application/json" -H "Accept: application/yaml" http://localhost:9898/offramp
      stderr_has:
        - HTTP/1.1 201 Created
        - "content-type: application/yaml"
    - name: Publish offramp already exists ( YAML )
      command: >
        curl -vs -stderr -X POST --data-binary @tests/bench-offramp.yaml -H "Content-type: application/yaml" http://localhost:9898/offramp
      stderr_has:
        - HTTP/1.1 409 Conflict
    - name: Get /offramp should return a list of 2 elements
      command: >
        curl -vs --stderr - -H "Accept: application/yaml" http://localhost:9898/offramp
      stdout_has:
        - HTTP/1.1 200 OK
        - "system::stdout"
        - "blackhole"
        - "system::stderr"
    - name: GET /offramp/blackhole should 200 after publish
      command: >
        curl -vs --stderr - -H "Accept: application/yaml" http://localhost:9898/offramp/blackhole
      stdout_has:
        - HTTP/1.1 200 OK
    - name: DELETE /offramp/blackhole should
      command: >
        curl -vs --stderr - -X DELETE  -H "Accept: application/yaml" http://localhost:9898/offramp/blackhole
      stdout_has:
        - HTTP/1.1 200 OK
    - name: Get /offramp should return an empty list
      command: curl -vs --stderr - http://localhost:9898/offramp
      stdout_has:
        - HTTP/1.1 200 OK
        - "system::stdout"
        - "system::stderr"
- name: REST API - Interactive deploy/undeploy of a binding ( YAML )
  entries:
    - name: GET /binding/default should 404 before publish
      command: curl -vs --stderr - http://localhost:9898/binding/default
      stdout_has:
        - HTTP/1.1 404 Not Found
    - name: GET /binding should return an empty list
      command: curl -vs --stderr - http://localhost:9898/binding
      stdout_has:
        - HTTP/1.1 200 OK
        - '\[]'
    - name: Publish binding ( YAML )
      command: >
        curl -vs -stderr -X POST --data-binary @tests/bench-binding.yaml -H "Content-type: application/yaml" -H "Accept: application/yaml" http://localhost:9898/binding
      stderr_has:
        - HTTP/1.1 201 Created
        - "content-type: application/yaml"
    - name: Publish binding already exists ( JSON )
      command: >
        curl -vs -stderr -X POST --data-binary @tests/bench-binding.json -H "Content-type: application/json" http://localhost:9898/binding
      stderr_has:
        - HTTP/1.1 409 Conflict
    - name: Get /binding should return a list of 1 element
      command: curl -vs --stderr - http://localhost:9898/binding
      stdout_has:
        - HTTP/1.1 200 OK
        - "default"
    - name: GET /binding/default should 200 after publish
      command: curl -vs --stderr - http://localhost:9898/binding/default
      stdout_has:
        - HTTP/1.1 200 OK
    - name: DELETE /binding/default should
      command: curl -vs --stderr - -X DELETE http://localhost:9898/binding/default
      stdout_has:
        - HTTP/1.1 200 OK
    - name: Get /binding should return an empty list
      command: curl -vs --stderr - http://localhost:9898/binding
      stdout_has:
        - HTTP/1.1 200 OK
        - '\[]'
- name: REST API - Interactive deploy/undeploy of a binding ( JSON )
  entries:
    - name: GET /binding/default should 404 before publish
      command: curl -vs --stderr - http://localhost:9898/binding/default
      stdout_has:
        - HTTP/1.1 404 Not Found
    - name: GET /binding should return an empty list
      command: curl -vs --stderr - http://localhost:9898/binding
      stdout_has:
        - HTTP/1.1 200 OK
        - "\\[]"
    - name: Publish binding ( JSON )
      command: >
        curl -vs -stderr -X POST --data-binary @tests/bench-binding.json -H "Content-type: application/json" -H "Accept: application/yaml" http://localhost:9898/binding
      stderr_has:
        - HTTP/1.1 201 Created
        - "content-type: application/yaml"
    - name: Publish binding already exists ( YAML )
      command: >
        curl -vs -stderr -X POST --data-binary @tests/bench-binding.yaml -H "Content-type: application/yaml" http://localhost:9898/binding
      stderr_has:
        - HTTP/1.1 409 Conflict
    - name: Get /binding should return a list of 1 element
      command: >
        curl -vs --stderr - -H "Accept: application/yaml" http://localhost:9898/binding
      stdout_has:
        - HTTP/1.1 200 OK
        - default
    - name: GET /binding/default should 200 after publish
      command: >
        curl -vs --stderr - -H "Accept: application/yaml" http://localhost:9898/binding/default
      stdout_has:
        - HTTP/1.1 200 OK
    - name: DELETE /binding/default should
      command: >
        curl -vs --stderr - -X DELETE  -H "Accept: application/yaml" http://localhost:9898/binding/default
      stdout_has:
        - HTTP/1.1 200 OK
    - name: Get /binding should return an empty list
      command: curl -vs --stderr - http://localhost:9898/binding
      stdout_has:
        - HTTP/1.1 200 OK
        - '\[]'
# - name: REST API - Deployment acceptance tests
#   entries:
#     - name: Publish passthrough pipeline
#       command: >
#         curl -vs -stderr -X POST --data-binary @tests/bench-pipeline.yaml -H "Content-type: application/yaml" http://localhost:9898/pipeline
#       stderr_has:
#         - HTTP/1.1 201 Created
#         - "content-type: application/json"
#     - name: Publish blaster onramp
#       command: >
#         curl -vs -stderr -X POST --data-binary @tests/bench-onramp.json -H "Content-type: application/json" -H "Accept: application/yaml" http://localhost:9898/onramp
#       stderr_has:
#         - HTTP/1.1 201 Created
#         - "content-type: application/yaml"
#     - name: Publish blackhole offramp
#       command: >
#         curl -vs -stderr -X POST --data-binary @tests/bench-offramp.yaml -H "Content-type: application/yaml" http://localhost:9898/offramp
#       stderr_has:
#         - HTTP/1.1 201 Created
#         - "content-type: application/json"
#     - name: Publish binding ( YAML )
#       command: >
#         curl -vs -stderr -X POST --data-binary @tests/bench-binding.yaml -H "Content-type: application/yaml" -H "Accept: application/yaml" http://localhost:9898/binding
#       stderr_has:
#         - HTTP/1.1 201 Created
#         - "content-type: application/yaml"
#     - name: Publish mapping ( JSON )
#       command: >
#         curl -vs -stderr -X POST --data-binary @tests/bench-mapping.json -H "Content-type: application/json" http://localhost:9898/binding/default/01
#       stderr_has:
#         - HTTP/1.1 201 Created
#         - "content-type: application/json"
#     - name: Get /binding/default/01 should return a mapping
#       command: >
#         curl -vs -stderr http://localhost:9898/binding/default/01
#       stderr_has:
#         - HTTP/1.1 200 OK
#     - name: Unpublish mapping ( JSON )
#       command: >
#         curl -vs -stderr -XDELETE --data-binary @tests/bench-mapping.yaml -H "Content-type: application/yaml" http://localhost:9898/binding/default/01
#       stderr_has:
#         - HTTP/1.1 200 OK
#         - "content-type: application/json"
- name: REST API - Deployment acceptance tests (metronome)
  entries:
    - name: Publish passthrough pipeline
      command: >
        curl -vs -stderr -X POST --data-binary @tests/metronome-pipeline.yaml -H "Content-type: application/yaml" -H "Accept: application/yaml" http://localhost:9898/pipeline
      stderr_has:
        - HTTP/1.1 201 Created
        - "content-type: application/yaml"
    - name: Publish blaster onramp
      command: >
        curl -vs -stderr -X POST --data-binary @tests/metronome-onramp.yaml -H "Content-type: application/yaml" -H "Accept: application/yaml" http://localhost:9898/onramp
      stderr_has:
        - HTTP/1.1 201 Created
        - "content-type: application/yaml"
    - name: Publish blackhole offramp
      command: >
        curl -vs -stderr -X POST --data-binary @tests/metronome-offramp.yaml -H "Content-type: application/yaml" -H "Accept: application/yaml" http://localhost:9898/offramp
      stderr_has:
        - HTTP/1.1 201 Created
        - "content-type: application/yaml"
    - name: Publish binding ( YAML )
      command: >
        curl -vs -stderr -X POST --data-binary @tests/metronome-binding.yaml -H "Content-type: application/yaml" -H "Accept: application/yaml" http://localhost:9898/binding
      stderr_has:
        - HTTP/1.1 201 Created
        - "content-type: application/yaml"
    - name: Publish mapping ( YAML )
      command: >
        curl -vs -stderr -X POST --data-binary @tests/metronome-mapping.yaml -H "Content-type: application/yaml" -H "Accept: application/yaml" http://localhost:9898/binding/default/01
      stderr_has:
        - HTTP/1.1 201 Created
        - "content-type: application/yaml"
    - name: Get /binding/default/01 should return a mapping
      command: >
        curl -vs -stderr http://localhost:9898/binding/default/01
      stderr_has:
        - HTTP/1.1 200 OK
    - name: Can't Unpublish Onramp  ( YAML )
      command: >
        curl -vs -stderr -XDELETE -H "Content-type: application/yaml" -H "Accept: application/yaml" http://localhost:9898/onramp/metronome
      stderr_has:
        - HTTP/1.1 409 Conflict
    - name: Can't Unpublish Pipeline  ( YAML )
      command: >
        curl -vs -stderr -XDELETE -H "Content-type: application/yaml" -H "Accept: application/yaml" http://localhost:9898/pipeline/main
      stderr_has:
        - HTTP/1.1 409 Conflict
    - name: Can't Unpublish Offramp  ( YAML )
      command: >
        curl -vs -stderr -XDELETE -H "Content-type: application/yaml" -H "Accept: application/yaml" http://localhost:9898/offramp/stdout
      stderr_has:
        - HTTP/1.1 409 Conflict
    - name: Can't Unpublish Binding  ( YAML )
      command: >
        curl -vs -stderr -XDELETE -H "Content-type: application/yaml" -H "Accept: application/yaml" http://localhost:9898/binding/default
      stderr_has:
        - HTTP/1.1 409 Conflict
    - name: Unpublish mapping ( YAML )
      command: >
        curl -vs -stderr -XDELETE  -H "Content-type: application/yaml" -H "Accept: application/yaml" http://localhost:9898/binding/default/01
      stderr_has:
        - HTTP/1.1 204 No Content
        - "content-type: application/yaml"
    - name:  Unpublish Onramp  ( YAML )
      command: >
        curl -vs -stderr -XDELETE -H "Content-type: application/yaml" -H "Accept: application/yaml" http://localhost:9898/onramp/metronome
      stderr_has:
        - HTTP/1.1 200 OK
    - name: Unpublish Pipeline  ( YAML )
      command: >
        curl -vs -stderr -XDELETE -H "Content-type: application/yaml" -H "Accept: application/yaml" http://localhost:9898/pipeline/main
      stderr_has:
        - HTTP/1.1 200 OK
    - name: Unpublish Offramp  ( YAML )
      command: >
        curl -vs -stderr -XDELETE -H "Content-type: application/yaml" -H "Accept: application/yaml" http://localhost:9898/offramp/stdout
      stderr_has:
        - HTTP/1.1 200 OK
    - name: Unpublish Binding  ( YAML )
      command: >
        curl -vs -stderr -XDELETE -H "Content-type: application/yaml" -H "Accept: application/yaml" http://localhost:9898/binding/default
      stderr_has:
        - HTTP/1.1 200 OK
