onramp:
  - id: rest
    type: rest
    codec: string
    config:
      host: localhost
      port: 9139
      # TODO eliminate the need for this config item
      link: true

pipeline:
  - id: main
    interface:
      inputs:
        - in
        - from-offramp
      outputs:
        - out
        - error
        - to-onramp
    nodes:
      - id: request-processing
        op: runtime::tremor
        config:
          script: |
            # TODO if we provide parsed uri parts as meta variables, this logic will be
            # simpler here (just need to override request_host)
            match {"test": $request_url} of
              case r = %{test ~= dissect|%{scheme}://%{host}/%{path_and_rest}|} =>
                let $endpoint = "{r.test.scheme}://localhost:8139/{r.test.path_and_rest}"
              default =>
                null
            end;
            event;
      - id: response-processing
        op: runtime::tremor
        config:
          script: |
            use std::array;

            let $response_headers.x-powered-by = match $response_headers of
              case %{present x-powered-by} =>
                array::push($response_headers.x-powered-by, "Tremor (As Proxy)")
              default =>
                let $response_headers.x-powered-by = [ "Tremor (As Proxy)" ]
            end;

            # if we want to overide the content-type sent as part of the offramp response
            # TODO currently content type in headers has more priority. revisit?
            #let $response_content_type = "text/plain";

            event;
    links:
      # TODO error output here should bubble up as 500 response for linked onramps
      in: [ request-processing ]
      request-processing: [ out ]
      request-processing/error: [ error ]

      from-offramp: [ response-processing ]
      response-processing: [ to-onramp ]
      response-processing/error: [ error ]

offramp:
  - id: upstream
    type: rest
    codec: string
    config:
      link: true
      # TODO make this optional too
      endpoints:
       - http://localhost:8139/snot
      #method: "PUT"
      #headers:
      #  "Client": "Tremor"

binding:
  - id: default
    links:
      '/onramp/rest/{instance}/out': [ '/pipeline/main/{instance}/in' ]
      '/pipeline/main/{instance}/out': [
        '/offramp/upstream/{instance}/in',
        #'/offramp/system::stdout/system/in' # for debugging
      ]

      '/pipeline/main/{instance}/error': [ '/offramp/system::stderr/system/in' ]

      # linked offramp that send responses to a pipeline
      '/offramp/upstream/{instance}/out': [ '/pipeline/main/{instance}/from-offramp' ]
      '/pipeline/main/{instance}/to-onramp': [
        # linked onramp that can respond based on pipeline output
        '/onramp/rest/{instance}/in',
        # for debugging purposes
        '/offramp/system::stdout/system/in'
      ]

      # tremor metrics
      #'/pipeline/system::metrics/system/out': [ '/offramp/system::stdout/system/in' ]
mapping:
  /binding/default/01:
    instance: '01'
