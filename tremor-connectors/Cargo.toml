[package]
name = "tremor-connectors"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
tremor-common = { path = "../tremor-common" }
tremor-config = { path = "../tremor-config" }
tremor-codec = { path = "../tremor-codec" }
tremor-pipeline = { path = "../tremor-pipeline" }
tremor-script = { path = "../tremor-script" }
tremor-value = { path = "../tremor-value" }
tremor-interceptor = { path = "../tremor-interceptor" }
tremor-system = { path = "../tremor-system" }

beef = { version = "0.5", default-features = false }
value-trait = { version = "0.8", default-features = false }
futures = { version = "0.3", default-features = false }
halfbrown = { version = "0.2", default-features = false }
tokio = { version = "1.34", default-features = false }
simd-json = { version = "0.13", default-features = false }
serde = { version = "1.0", default-features = false, features = ["derive"] }
url = { version = "2.5", default-features = false }
async-trait = { version = "0.1", default-features = false }
log = { version = "0.4", features = ["kv_unstable"] }
tokio-stream = { version = "0.1", default-features = false }
bimap = { version = "0.6", default-features = false, features = [
    "serde",
    "std",
] }
hostname = { version = "0.3", default-features = false }
thiserror = { version = "1.0", default-features = false }
anyhow = { version = "1.0", default-features = false }
event-listener = { version = "5", default-features = false }
lazy_static = { version = "1", default-features = false }
hex = { version = "0.4", optional = true, default-features = false }
either = { version = "1.10", default-features = false, features = ["serde"] }

# shared
simd-json-derive = { version = "0.13", optional = true, default-features = false }
uuid = { version = "1.6", optional = true, default-features = false, features = [
    "v4",
] }
http-body = { version = "0.4", optional = true, default-features = false }
hyper = { version = "0.14", optional = true, default-features = false, features = [
    "server",
    "http1",
    "http2",
    "runtime",
] }
async-stream = { version = "0.3", optional = true, default-features = false }
async-channel = { version = "1.9", optional = true, default-features = false }


# tls
tokio-rustls = { version = "0.24", optional = true, default-features = false }
rustls = { version = "0.21", optional = true, default-features = false }
rustls-pemfile = { version = "1", optional = true, default-features = false }
rustls-native-certs = { version = "0.6", optional = true, default-features = false }

# dns
trust-dns-resolver = { version = "0.23", optional = true, default-features = false, features = [
    "tokio-runtime",
    "system-config",
] }

# elasticsearch
elasticsearch = { version = "=8.5.0-alpha.1", optional = true, default-features = false, features = [
    "rustls-tls",
] }

# http
http = { version = "0.2", optional = true, default-features = false }
hyper-rustls = { version = "0.24", optional = true, default-features = false, features = [
    "rustls-native-certs",
    "http1",
    "http2",
    "tokio-runtime",
] }
mime = { version = "0.3", optional = true, default-features = false }
reqwest = { version = "0.11", optional = true, default-features = false, features = [
    "rustls-tls",
    "rustls-tls-native-roots",
] }
base64 = { version = "0.21", optional = true, default-features = false }
dashmap = { version = "5.5", optional = true, default-features = false }


# gcp
googapis = { version = "0.6", optional = true, default-features = true, features = [
    "google-pubsub-v1",
    "google-cloud-bigquery-storage-v1",
    "google-logging-v2",
    "google-storage-v2",
] }
gouth = { version = "0.2", optional = true, default-features = true }


# opentelemetry
tonic = { version = "0.6.1", optional = true, default-features = false, features = [
    "transport",
    "tls",
] }
prost = { version = "0.9.0", optional = true, default-features = false }
prost-types = { version = "0.9.0", optional = true, default-features = false }
# This is related to https://github.com/tremor-rs/tremor-runtime/issues/1688 the otel API's need to
# be updated together with tonic
tremor-otelapis = { version = "=0.2.4", optional = true, default-features = false, features = [
    "otel-all",
] }
rand = { version = "0.8.5", default-features = false }

# aws
aws-sdk-s3 = { version = "1", optional = true, default-features = false, features = [
    "behavior-version-latest",
    "sigv4a",
    "rustls",
    "rt-tokio",
] }
aws-types = { version = "1", optional = true, default-features = false }
aws-config = { version = "1", optional = true, default-features = false }

# kafka
rdkafka = { version = "0.36", optional = true, features = [
    "cmake-build",
    "libz-static",
    "tokio",
], default-features = false }
rdkafka-sys = { version = "4.6", optional = true, features = [
    "cmake-build",
    "libz-static",
], default-features = false }
indexmap = { version = "2", optional = true, default-features = false }


# websockets
tokio-tungstenite = { version = "0.20", optional = true, default-features = false, features = [
    "handshake",
] }

# discord
serenity = { version = "0.11", optional = true, default-features = false, features = [
    "client",
    "gateway",
    "rustls_backend",
    "model",
    "cache",
] }

# file
file-mode = { version = "0.1", optional = true, default-features = false }
async-compression = { version = "0.4", optional = true, default-features = false, features = [
    "xz",
    "tokio",
] }

# kv
sled = { version = "0.34", optional = true, default-features = false }

# wal
qwal = { git = "https://github.com/tremor-rs/qwal", optional = true, default-features = false, features = [
    "tokio",
] }

# bench
hdrhistogram = { version = "7", optional = true, default-features = false }
xz2 = { version = "0.1", optional = true, default-features = false }


# clickhouse
# Once a new version of clickhouse-rs is released, we can stop using a git
# repository as a dependency. The declaration can then be replaced with the
# following:
#
# clickhouse-rs = { version = "...", default-features = false, features = [
#   "async_std",
# ] }
#
# Releases can be tracked at [1].
#
# [1]: https://crates.io/crates/clickhouse-rs/versions
clickhouse-rs = { git = "https://github.com/suharev7/clickhouse-rs", rev = "73d39ba", optional = true, default-features = false, features = [
    "tokio_io",
    "tls",
] }
chrono-tz = { version = "0.8", optional = true, default-features = false }

# crononome
serde_yaml = { version = "0.9", optional = true, default-features = false }
chrono = { version = "0.4", optional = true, default-features = false }
cron = { version = "0.12", optional = true, default-features = false }

# udp

socket2 = { version = "0.5", optional = true, default-features = false }

[dev-dependencies]
serde_yaml = { version = "0.9", default-features = false }
test-case = "3.3"
proptest = "1.4"
testcontainers = "0.14"
serial_test = "3.0"
http-types = "2.0"
bytes = "1.0"
tempfile = { version = "3.8", default-features = false }
env_logger = "0.11"

[features]
default = [
    "dns",
    "elasticsearch",
    "http",
    "gcp",
    "otel",
    "aws",
    "kafka",
    "websocket",
    "discord",
    "file",
    "kv",
    "wal",
    "clickhouse",
    "crononome",
    "stdio",
    "metronome",
    "null",
    "metrics",
    "tcp",
    "udp",
    "unix-socket",
    "dev",
    "integration-harness-local",
]

128bit = ["tremor-value/128bit"]
mime = []
socket = ["dep:socket2"]

dev = ["circut-breaker", "exit", "bench"]

tls = [
    "dep:hyper",
    "dep:rustls-native-certs",
    "dep:rustls-pemfile",
    "dep:rustls",
    "dep:tokio-rustls",
]
protobuf = ["dep:prost", "dep:prost-types"]


dns = ["dep:trust-dns-resolver"]
elasticsearch = [
    "dep:elasticsearch",
    "dep:reqwest",
    "dep:serde_yaml",
    "tls",
    "http",
]
http = [
    "dep:async-stream",
    "dep:base64",
    "dep:dashmap",
    "dep:gouth",
    "dep:http-body",
    "dep:http",
    "dep:hyper-rustls",
    "dep:hyper",
    "dep:mime",
    "dep:reqwest",
    "hyper/stream",
    "hyper/http1",
    "hyper/http2",
    "tls",
    "mime",
    "socket",
]
gcp = [
    "dep:async-channel",
    "dep:async-stream",
    "dep:googapis",
    "dep:gouth",
    "dep:http-body",
    "dep:simd-json-derive",
    "dep:http",
    "dep:hyper",
    "dep:hyper-rustls",
    "dep:tonic",
    "protobuf",
]
otel = ["dep:tonic", "protobuf", "dep:tremor-otelapis", "dep:hex"]
aws = ["dep:async-channel", "dep:aws-config", "dep:aws-sdk-s3", "dep:aws-types"]
kafka = ["dep:rdkafka", "dep:rdkafka-sys", "dep:indexmap"]
websocket = ["dep:tokio-tungstenite", "tls", "socket"]
discord = ["dep:serenity"]
file = ["dep:file-mode", "dep:async-compression"]
kv = ["dep:sled"]
wal = ["dep:qwal", "dep:simd-json-derive"]
bench = ["dep:xz2", "dep:hdrhistogram"]
clickhouse = ["dep:clickhouse-rs", "dep:chrono-tz", "dep:uuid"]
crononome = ["dep:serde_yaml", "dep:chrono", "dep:cron"]
stdio = []
metronome = []
null = []
metrics = []
exit = []
circut-breaker = []
tcp = ["socket", "tls"]
udp = ["socket"]
unix-socket = ["socket", "dep:file-mode"]

integration-utils = []

integration-harness = [
    "integration-harness-docker",
    "integration-harness-local",
]
integration-harness-docker = [
    "integration-tests-aws",
    "integration-tests-clickhouse",
    "integration-tests-elasticsearch",
    "integration-tests-gcp",
    "integration-tests-kafka",
]
integration-harness-local = [
    "integration-tests-bench",
    "integration-tests-crononome",
    "integration-tests-file",
    "integration-tests-http",
    "integration-tests-metronome",
    "integration-tests-tcp",
    "integration-tests-udp",
    "integration-tests-unix-socket",
    "integration-tests-wal",
    "websocket-integration",
]

integration-tests-bench = ["bench"]
integration-tests-clickhouse = ["clickhouse", "dep:chrono", "integration-utils"]
integration-tests-crononome = ["crononome"]
integration-tests-elasticsearch = ["elasticsearch", "integration-utils"]
integration-tests-file = ["file"]
integration-tests-gcp = ["gcp", "integration-utils"]
integration-tests-http = ["http", "integration-utils"]
integration-tests-aws = ["aws", "integration-utils"]
integration-tests-kafka = ["kafka", "integration-utils"]
integration-tests-metronome = ["metronome"]
integration-tests-tcp = ["tcp", "integration-utils"]
integration-tests-udp = ["udp"]
integration-tests-unix-socket = ["unix-socket"]
integration-tests-wal = ["wal"]
websocket-integration = ["websocket", "integration-utils"]
