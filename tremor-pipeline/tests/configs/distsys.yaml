# Pipeline from bench1.yaml that resembles the most complex pipeline used
# in distsys to our knowledge.
id: main
interface:
  inputs: [ in ]
  outputs: [ out ]
nodes:
  - id: classify
    op: runtime::tremor
    config:
      script: |
        let event.application = "snot";
        let event.index = "badger7";
        let event.logger_name = "tsunami";
        let event.tags = [ "tag1" ];
        let event.syslog_hostname = "sesame_street";
        let dimension = null;
        let rate = 1000;
        let class = "default";

        let index_type = event.index;

        match event.application of
            case "app1" => let class = "applog_app1" , let rate = 1250
            case "app2" => let class = "applog_app2" , let rate = 2500
            case "app3" => let class = "applog_app3" , let rate = 18750
            case "app4" => let class = "applog_app4" , let rate = 750
            case "app5" => let class = "applog_app5" , let rate = 18750
            default => null
        end;

        match class != "default" of
            case true => let $dimension = event.application
            default => null
        end;

        match index_type of
            case class = "applog_app6" => let $dimension = event.logger_name, let rate = 4500
            default => null
        end;

        match index_type of
            case class = "syslog_app1" => let rate = 2500
            case core::array::contains(event.tags,"tag1") => let class = "syslog_app2" , let rate = 125
            case class = "syslog_app3" => let rate = 1750
            case class = "syslog_app4" => let rate = 1750
            case class = "syslog_app5" => let rate = 7500
            case class = "syslog_app6" => let rate = 125
            default => null
        end;

        match core::type::is_string(class) of
            case true => let dimension = event.syslog_hostname
            default => let class = "default" , let rate = 250
        end;

        let $class = class;
        let $rate = rate;
        let $dimension = dimension;

        event;
links:
  in: [ classify ]
  classify: [ out ]
