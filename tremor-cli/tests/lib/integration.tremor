use std::time::nanos;

define connector exit from exit 
with
    config = {
        "delay": nanos::from_millis(100),
        "graceful": true
    }
end;

define connector write_file from file
args
    file = "out.log"
with 
    codec = {"name": "json", "config": {"mode": "sorted"}},
    postprocessors = ["separate"],
    config = {
        "path": args.file,
        "mode": "truncate"
    },
end;

define connector read_file from file
args
    file = "in.json"
with 
    codec = {"name": "json", "config": {"mode": "sorted"}},
    preprocessors = ["separate"],
    config = {
        "path": args.file,
        "mode": "read"
    },
end;

define pipeline out_or_exit
into out, exit
args
  delay = 0
pipeline
    select event from in where event != "exit" into out;
    select {"exit": 0, "delay": args.delay} from in where event == "exit" into exit;
end;

define pipeline out_and_exit
into 
    out, exit
args
  delay = 0
pipeline
    select event from in into out; # include 'exit'
    select {"exit": 0, "delay": args.delay} from in where event == "exit" into exit;
end;
