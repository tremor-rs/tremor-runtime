onramp:
  - id: fake_sensor_feed
    type: file
    codec: json
    config:
      source: "sensor_data.json"
      close_on_done: true
      sleep_on_done: 3000

  - id: tcp
    type: tcp
    codec: json
    config:
      host: "0.0.0.0"
      port: 9000

  - id: tcpstate
    type: tcp
    preprocessors:
      - lines
    codec: json
    config:
      host: "0.0.0.0"
      port: 9998

  - id: restmetrics
    type: rest
    linked: true
    preprocessors:
      - lines
    codec: json
    codec_map:
      "text/html": "string"
    config:
      host: "0.0.0.0"
      port: 9999

offramp:

  - id: timescaledb-output
    type: postgres
    codec: json
    config:
      host: 0.0.0.0
      port: 5432
      user: postgres
      password: example
      dbname: measurements
      table: sensor_data

  - id: measurements_log
    type: file
    config:
      file: measurements.log

  - id: alerts_log
    type: file
    config:
      file: alerts.log

  - id: debug
    type: stdout
    codec: json

binding:
  - id: tcppipeline
    links:
      '/onramp/fake_sensor_feed/{instance}/out': [ '/pipeline/alert_pipeline/{instance}/in', '/pipeline/metricstoragepipeline/{instance}/in' ]
      '/onramp/tcp/{instance}/out': [ '/pipeline/metricstoragepipeline/{instance}/in',  '/pipeline/alert_pipeline/{instance}/in']
      '/pipeline/alert_pipeline/{instance}/out': [ '/offramp/system::stdout/{instance}/in' ]
      '/pipeline/alert_pipeline/{instance}/err': [ '/offramp/system::stdout/{instance}/in', '/offramp/alerts_log/{instance}/in' ]
      '/pipeline/metricstoragepipeline/{instance}/out': [ '/offramp/timescaledb-output/{instance}/in', '/offramp/system::stdout/{instance}/in', '/offramp/measurements_log/{instance}/in' ]
      '/pipeline/metricstoragepipeline/{instance}/err': [ '/offramp/system::stdout/{instance}/in' ]

mapping:
  /binding/tcppipeline/01:
    instance: "01"
