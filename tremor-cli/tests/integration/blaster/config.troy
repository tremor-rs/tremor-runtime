
define flow main
flow
  use troy::connectors;

  define pipeline exit
  pipeline
    # make the test exit after all events have been sent
    select {
      "exit": 0,
      "delay": 1000
    } from in where event == "exit" into out;
  end;

  define pipeline main
  pipeline
    select event from in where event != "exit" into out;
  end;

  define connector bench from bench
  with
    codec = "json",
    config = {
      "source": "in.json",
      "interval": 1000000,
      "iters": 1
    }
  end;

  define connector file from file
  args
    file
  with 
    codec = "json",
    config = {
      "path": args.file,
      "mode": "truncate"
    },
    postprocessors = ["lines"]
  end;

  create pipeline exit;
  create pipeline main;
  create connector bench;
  create connector exit from connectors::exit;

  create connector out_file from file
  with
    file = "out.log"
  end;

  create connector err_file from file
  with
    file = "err.log"
  end;

  connect /connector/bench/bench to /pipeline/main/main;
  connect /connector/bench/bench to /pipeline/exit/exit;
  connect /pipeline/main/main to /connector/file/out_file;
  connect /pipeline/main/main/err to /connector/file/err_file;
  connect /pipeline/exit/exit to /connector/exit/exit;
  connect /pipeline/exit/exit/err to /connector/file/err_file;
end;

deploy flow main;