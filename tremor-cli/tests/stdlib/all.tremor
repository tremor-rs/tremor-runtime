use std::test;

fn add(a,b) with a + b end;
fn sub(a,b) with a - b end;

test::suite({
  "name": "Suite of assert tests",
  "tags": [ "snot" ],
  "suite": {
        "name": "Assert style unit tests",
        "tags": [ "badger" ],
        "tests": [
          test::assert("addition ok 1/7", 3, add(2,1)),
          test::assert("addition ok 2/7", 4, add(3,1)),
          test::assert("addition ok 3/7", 5, add(3,2)),
          test::assert("addition ok 4/7", 6, add(4,2)),
          test::assert("addition ok 5/7", 7, add(4,3)),
          test::assert("addition ok 6/7", 8, add(5,3)),
          test::assert("addition ok 7/7", 9, add(5,4)),
        ]
    },
});

test::suite({
  "name": "Suite of predicate tests",
  "suite": {
    "name": "Predicate style unit tests",
    "tests": [
      test::assert("equality", true, 1 == 1),
      test::assert("less than", true, 1 < 2),
      test::assert("greater than", true, 2 > 1),
      test::assert("not equal", false, 1 == 0),
    ]
  }
});

test::suite({
  "name": "Suite of embedded tests",
  "suite": {
    "name": "Predicate style unit tests",
    "tests": [
      test::test({
        "name": "Test subtraction by zero",
#        "tags": [ "snot" ],
        "test": test::assert("subtraction ok 1/2", 2, sub(2,0))
      }),
    ],
  }
});

"snot badger";
