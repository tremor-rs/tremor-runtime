name: Rust - Latest

on: [push]

jobs:
  license:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Check license headers
        run: make chk_copyright chk_copyright_ci
      - name: Install clippy-deny
        run: cargo install cargo-deny
      - name: Check dependencies
        run: cargo deny check
  sanity:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Safety cheks
        run: ./checks/safety.sh -a
      - name: unused deps (tremor-runtime)
        run: ./dep_check.sh
      - name: unused deps (dissect)
        run: ./dep_check.sh dissect
  unused-deps:
    strategy:
      fail-fast: false
      matrix:
        repo:
          - .
          - dissect
          - kv 
          - tremor-pipeline
          - tremor-script
          - tremor-tool
          - remor-api
          - tremor-query
          - tremor-server
          - window
    runs-on: ubuntu-latest
    steps:
      - name: Install deps
        run: sudo snap install remarshal rg
      - uses: actions/checkout@v1
      - name: Check for unused dependencies
        run: ./dep_check.sh ${{matrix.repo}}
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Check Formating
        run: cargo fmt --all -- --check
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Install deps
        run: sudo apt-get install -y libssl1.0-dev libssl1.0
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Build
        run: cargo build --all --verbose
      - name: Run tests
        run: cargo test --all --verbose
      - name: Run Integration Tests
        run: make it
  api-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Install deps
        run: sudo apt-get install -y libssl1.0-dev libssl1.0
      - name: Install coyote
        run: go get github.com/landoop/coyote
      - name: Install yaml2json
        run: go get github.com/bronze1man/yaml2json
      - name: install EQC
        run: curl -O http://quviq-licencer.com/downloads/eqcR21.zip && unzip eqcR21.zip && cd Quviq* && sudo erl -noshell -eval 'eqc_install:install()' -eval 'init:stop()'
      - name: Activate EQC
        run:  erl -noshell -eval 'eqc:registration("${{secrets.EQC_LICENSE}}")' -eval "eqc:start()" -eval "init:stop()"
      - name: generate yaml
        run: ~/go/bin/yaml2json < static/openapi.yaml > static/openapi.json
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Build
        run: cargo build -p tremor-server -p tremor-tool
      - name: Run curl tests
        run: ./checks/api.sh -c
      - name: Run tremor-tool tests
        run: ./checks/api.sh -t
      - name: Run eqc tests
        run: ./checks/api.sh -e
  clippy_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Install deps
        run: sudo apt-get install -y libssl1.0-dev libssl1.0
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install clippy
        run: rustup component add clippy
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all
  code-coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Install deps
        run: sudo apt-get install -y libssl1.0-dev libssl1.0
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: install tarpaulin
        run: cargo install cargo-tarpaulin -f
      - name: run tarpaulin
        run: cargo tarpaulin -v --out Xml --exclude-files target* --exclude-files depricated/* --all -- --test-threads=1
      - uses: codecov/codecov-action@v1.0.2
        with:
          token: ${{secrets.CODECOV_TOKEN}} #required
          file: ./cobertura.xml
  # code-coverage:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: Install deps
  #       run: sudo apt-get install -y libssl1.0-dev libssl1.0
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: nightly
  #         override: true
  #     - uses: actions-rs/cargo@v1
  #       with:
  #         command: test
  #         args: --no-fail-fast --all
  #       env:
  #         'CARGO_INCREMENTAL': '0'
  #         'RUSTFLAGS': '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Zno-landing-pads'
  #     - id: coverage
  #       uses: actions-rs/grcov@v0.1
  #     - uses: actions/upload-artifact@master
  #       with:
  #         name: coverage-report
  #         path: ${{ steps.coverage.outputs.report }}
      # - name: Upload to codecov
      #   uses: codecov/codecov-action@v1.0.2
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }} #required
      #     file: ${{ steps.coverage.outputs.report }}
      #     #flags: unittests #optional
      #     #name: codecov-umbrella #optional
