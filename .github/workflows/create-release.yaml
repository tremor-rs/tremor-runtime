name: "Publish new release"

on:
  pull_request:
    branches:
      - main
    types:
      - closed
      - labeled
jobs:
  release:
    name: Publish new release
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged && contains( github.event.pull_request.labels.*.name, 'Release')
    steps:
      - name: Extract version from branch name (for release branches)
        if: startsWith(github.event.pull_request.head.ref, 'release/')
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          VERSION=${BRANCH_NAME#release/}
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v3
      - name: Initialize mandatory git config
        run: |
          git config user.name "GitHub actions"
          git config user.email noreply@github.com
      - name: Pushing tags
        run: |
          VER=$(echo v${{ env.RELEASE_VERSION }} | sed 's/.*rc.*/rc/')
          echo "RC=$VER" >> $GITHUB_ENV
          git tag -a -m "Release v${{ env.RELEASE_VERSION }}" "v${{ env.RELEASE_VERSION }}"
          git push origin v${{ env.RELEASE_VERSION }}
      - name: Extract release notes
        id: extract-release-notes
        uses: ffurrer2/extract-release-notes@v1
        with:
          # we produce this file for creating the release with gh later on
          release_notes_file: RELEASE_NOTES_v${{ env.RELEASE_VERSION }}.md
      - name: Create release
        run: gh release create v${{ env.RELEASE_VERSION }} --title "Release v${{env.RELEASE_VERSION}}" --notes-file RELEASE_NOTES_v${{ env.RELEASE_VERSION }}.md
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
      - name: Trigger publish crates workflow
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Publish crates
          token: ${{ secrets.PAT_TOKEN }}