name: Integration tests

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  cli-test-harness:

    strategy:
      matrix:
        kind: [integration, unit, command]
        include:
          # - os: windows-2019
          - os: macos-10.15
            exclude_tests: "--excludes docker"
            # GH OS X runners only support very very very very old CPUs so we can't use anything
            # fancy here and got to fall back to the minimal SSE4.2 requirement for simd_json
            target_feature: "+sse4.2"
          - os: macos-11.0
            target_feature: "+sse4.2"
          - os: ubuntu-20.04
            exclude_tests: "--excludes postgres"
            target_feature: "+avx,+avx2,+sse4.2"

    env:
      TREMOR_PATH: "${{ github.workspace }}/tremor-script/lib:${{ github.workspace }}/tremor-cli/tests/lib"
      RUSTFLAGS: -D warnings -C target-feature=${{ matrix.target_feature }}

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v1

      - name: Install deps
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get -qy update && sudo apt-get install -y libssl-dev libssl1.1

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          components: llvm-tools-preview

      - uses: Swatinem/rust-cache@v1
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Print docker-compose version
        run: docker-compose --version

      - name: run ${{ matrix.kind }} tests
        run: cargo llvm-cov run -p tremor-cli --output-path lcov.txt -- test ${{ matrix.kind }} tremor-cli/tests ${{ matrix.exclude_tests }}

      - name: Upload error logs
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: test-errors
          path: tremor-cli/tests/**/*.log

      - name: Upload coverage
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          files: ./lcov.txt # optional
          flags: CLI${{ matrix.kind }} # optional
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)      
